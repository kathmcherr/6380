###Load Libraries
library(lavaan)
library(qgraph)
data(PoliticalDemocracy)
PD<-PoliticalDemocracy
head(PD)
library(lavaan)
library(qgraph)
data(PoliticalDemocracy)
PD<-PoliticalDemocracy
dem60 ~ ind60
g =~ VCI + VSI + FRI + WMI + PSI
StudentEngagement =~ Leadership + LoveOfLearning + SelfRegulation
dem60 ~ ind60
fit <- sem(model, data = PD)
###Load Libraries
library(lavaan)
library(qgraph)
#Built in dataset
data(PoliticalDemocracy)
PD<-PoliticalDemocracy
#head(PD)
#write.csv(PD,file="My6380Data.csv")
# This data set is looking at indicators of academic achievement (we changed the variable names from the built in data set)
## here is an example model in Lavan
## the measurement model equations are "latent" and represented by =~
## regressions are indicated by ~
## residual correlations are represented by ~~
model <- '
# measurement model
StudentEngagement =~ Leadership + LoveOfLearning + SelfRegulation
g =~ VCI + VSI + FRI + WMI + PSI
# regressions
StudentEngagement ~ g
# This is basically saying Student Engagement is dependent on g. So, you get this sort of dynamic triangle that is the nature of an SEM model
# residual correlations
VCI ~~ VSI
Leadership ~ LoveOfLearning
WMI ~~ PSI
'
# This is saying your variables are somehow correlated
# =~ represent latent variables (e.g., Leadership + LoveOfLearning + SelfRegulation load onto Student Engagement)
# ~ represents like it normally would in R regression; response variable ~ independent variable
# ~~ represets a correlation
#fit your SEM
fit <- sem(model, data = PD)
fit <- sem(model, data = My6380Data.csv)
fit <- sem(model, data = My6380Data.csv)
library(lavaan)
library(qgraph)
data(PoliticalDemocracy)
PD<-PoliticalDemocracy
library(lavaan)
library(qgraph)
#Built in dataset
data(PoliticalDemocracy)
PD<-PoliticalDemocracy
library(lavaan)
library(qgraph)
#Built in dataset
data(PoliticalDemocracy)
PD <- PoliticalDemocracy
#head(PD)
my.data <- write.csv(PD,file="My6380Data.csv")
fit <- sem(model, data = my.data)
summary(fit, standardized = TRUE, rsq = T)
library(lavaan)
library(qgraph)
my.data <- write.csv(PD,file="My6380Data.csv")
# This data set is looking at indicators of academic achievement (we changed the variable names from the built in data set)
## here is an example model in Lavan
## the measurement model equations are "latent" and represented by =~
## regressions are indicated by ~
## residual correlations are represented by ~~
model <- '
# measurement model
StudentEngagement =~ Leadership + LoveOfLearning + SelfRegulation
g =~ VCI + VSI + FRI + WMI + PSI
# regressions
StudentEngagement ~ g
# This is basically saying Student Engagement is dependent on g. So, you get this sort of dynamic triangle that is the nature of an SEM model
# residual correlations
VCI ~~ VSI
Leadership ~ LoveOfLearning
WMI ~~ PSI
'
# This is saying your variables are somehow correlated
# =~ represent latent variables (e.g., Leadership + LoveOfLearning + SelfRegulation load onto Student Engagement)
# ~ represents like it normally would in R regression; response variable ~ independent variable
# ~~ represets a correlation
#fit your SEM
fit <- sem(model, data = my.data)
#summarize results
summary(fit, standardized = TRUE, rsq = T)
my.data <- read.csv("My6380Data.csv")
View(my.data)
library(lavaan)
library(qgraph)
my.data <- read.csv("My6380Data.csv")
View(my.data)
# This data set is looking at indicators of academic achievement (we changed the variable names from the built in data set)
## here is an example model in Lavan
## the measurement model equations are "latent" and represented by =~
## regressions are indicated by ~
## residual correlations are represented by ~~
model <- '
# measurement model
StudentEngagement =~ Leadership + LoveOfLearning + SelfRegulation
g =~ VCI + VSI + FRI + WMI + PSI
# regressions
StudentEngagement ~ g
# This is basically saying Student Engagement is dependent on g. So, you get this sort of dynamic triangle that is the nature of an SEM model
# residual correlations
VCI ~~ VSI
Leadership ~ LoveOfLearning
WMI ~~ PSI
'
# This is saying your variables are somehow correlated
# =~ represent latent variables (e.g., Leadership + LoveOfLearning + SelfRegulation load onto Student Engagement)
# ~ represents like it normally would in R regression; response variable ~ independent variable
# ~~ represets a correlation
#fit your SEM
fit <- sem(model, data = my.data)
#summarize results
summary(fit, standardized = TRUE, rsq = T)
data(PoliticalDemocracy)
PD<-PoliticalDemocracy
my.data<-write.csv(PD, file = "TEST.csv")
wisc5.cor <- lower2full(c(1,0.72,1,0.64,0.63,1,0.51,0.48,0.37,1,0.37,0.38,0.38,0.38,1))
library(lavaan)
wisc5.cor <- lower2full(c(1,0.72,1,0.64,0.63,1,0.51,0.48,0.37,1,0.37,0.38,0.38,0.38,1))
library(lavaan)
library(qgraph)
my.data <- read.csv("My6380Data.csv")
View(my.data)
library(lavaan)
library(qgraph)
my.data <- read.csv("My6380Data.csv")
# This data set is looking at indicators of academic achievement (we changed the variable names from the built in data set)
## here is an example model in Lavan
## the measurement model equations are "latent" and represented by =~
## regressions are indicated by ~
## residual correlations are represented by ~~
model <- '
# measurement model
StudentEngagement =~ Leadership + LoveOfLearning + SelfRegulation
g =~ VCI + VSI + WMI + PSI
# regressions
StudentEngagement ~ g
# This is basically saying Student Engagement is dependent on g. So, you get this sort of dynamic triangle that is the nature of an SEM model
# residual correlations
VCI ~~ VSI
Leadership ~ LoveOfLearning
WMI ~~ PSI
'
# This is saying your variables are somehow correlated
# =~ represent latent variables (e.g., Leadership + LoveOfLearning + SelfRegulation load onto Student Engagement)
# ~ represents like it normally would in R regression; response variable ~ independent variable
# ~~ represets a correlation
#fit your SEM
fit <- sem(model, data = my.data)
#summarize results
summary(fit, standardized = TRUE, rsq = T)
###Load Libraries
library(lavaan)
library(qgraph)
#Built in dataset
data(PoliticalDemocracy)
PD<-PoliticalDemocracy
#head(PD)
# This data set is looking at indicators of democracy
## here is an example model from one of Lavaan's build-in datasets
## the measurement model equations are "latent" and represented by =~
## regressions are indicated by ~
## residual correlations (in this case because they represent different years of the same measurement) are represented by ~~
model <- '
# measurement model
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
dem60 ~ ind60
dem65 ~ ind60 + dem60
# This is basically saying dem60 is dependent on ind60, and dem65 is dependent on those two. So, you get this sort of dynamic triangle that is the nature of an SEM model
# residual correlations
y1 ~~ y5
y2 ~~ y4
y2~~ y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
# This is saying your variables are somehow correlated
# =~ represent latent variables (e.g., y1 + y2 + y3 +y4 are loading onto dem60)
# ~ represents like it normally would in R regression; response variable ~ independent variable
# ~~ represets a correlation
#fit your SEM
fit <- sem(model, data = PD)
#summarize results
summary(fit, standardized = TRUE, rsq = T)
my.data<-read.csv("My6380Data.csv")
# This data set is looking at indicators of democracy
## here is an example model from one of Lavaan's build-in datasets
## the measurement model equations are "latent" and represented by =~
## regressions are indicated by ~
## residual correlations (in this case because they represent different years of the same measurement) are represented by ~~
model <- '
# measurement model
#ind60 =~ x1 + x2 + x3
ReadingAbility =~ RimeAwareness + PhonologicalAwareness + VerbalSTM
#dem60 =~ y1 + y2 + y3 + y4
IQ =~ VCI + VSI + WMI + PSI
#dem65 =~ y5 + y6 + y7 + y8
StudentEngagement =~ Creativity + Leadership + LoveOfLearning + SelfRegulation
#dem60 ~ ind60
IQ ~ ReadingAbility
#dem65 ~ ind60 + dem60
StudentEngagement ~ ReadingAbility + IQ
# This is basically saying dem60 is dependent on ind60, and dem65 is dependent on those two. So, you get this sort of dynamic triangle that is the nature of an SEM model
# residual correlations
VCI ~~ Creativity
VSI ~~ PSI
VSI~~ Leadership
WMI ~~ LoveOfLearning
PSI ~~ SelfRegulation
Leadership ~~ SelfRegulation
'
# This is saying your variables are somehow correlated
# =~ represent latent variables (e.g., y1 + y2 + y3 +y4 are loading onto dem60)
# ~ represents like it normally would in R regression; response variable ~ independent variable
# ~~ represets a correlation
# ~ represents like it normally would in R regression; response variable ~ independent variable
# ~~ represets a correlation
#fit your SEM
fit <- sem(model, data = my.data)
#summarize results
summary(fit, standardized = TRUE, rsq = T)
library(lavaan)
library(qgraph)
#Built in dataset
my.data<-read.csv("My6380Data.csv")
# This data set is looking at indicators of democracy
## here is an example model from one of Lavaan's build-in datasets
## the measurement model equations are "latent" and represented by =~
## regressions are indicated by ~
## residual correlations (in this case because they represent different years of the same measurement) are represented by ~~
model <- '
# measurement model
#ind60 =~ x1 + x2 + x3
ReadingAbility =~ RimeAwareness + PhonologicalAwareness + VerbalSTM
#dem60 =~ y1 + y2 + y3 + y4
IQ =~ VCI + VSI + WMI + PSI
#dem65 =~ y5 + y6 + y7 + y8
StudentEngagement =~ Creativity + Leadership + LoveOfLearning + SelfRegulation
#dem60 ~ ind60
IQ ~ ReadingAbility
#dem65 ~ ind60 + dem60
StudentEngagement ~ ReadingAbility + IQ
# This is basically saying dem60 is dependent on ind60, and dem65 is dependent on those two. So, you get this sort of dynamic triangle that is the nature of an SEM model
# residual correlations
VCI ~~ Creativity
VSI ~~ PSI
VSI~~ Leadership
WMI ~~ LoveOfLearning
PSI ~~ SelfRegulation
Leadership ~~ SelfRegulation
'
# This is saying your variables are somehow correlated
# =~ represent latent variables (e.g., y1 + y2 + y3 +y4 are loading onto dem60)
# ~ represents like it normally would in R regression; response variable ~ independent variable
# ~~ represets a correlation
#fit your SEM
fit <- sem(model, data = my.data)
#summarize results
summary(fit, standardized = TRUE, rsq = T)
library(semPlot)
semPaths(fit, "std", edge.label.cex = 0.5, curvePivot = TRUE, layout = "tree")
View(my.data)
summary(fit, standardized = TRUE, rsq = T)
modindices(fit)
vartable(fit)
names(PD)
model2 <- '
# measurement model
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
# regressions
dem60 ~ ind60
dem65 ~ dem60
#took out ind60 from regression
# residual correlations
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
fit2 <- sem(model2, data = PD)
summary(fit2)
AIC(fit, fit2)
AIC(fit, fit2)
k.dat<-read.csv("./Keeley_rawdata_select4.csv")
names(k.dat)
head(k.dat)
# Write lavaan code for this single equation model
mod <- '
rich ~ cover
cover ~ firesev
'
k.dat$cov2<-k.dat$cover^2
mod2<- '
rich ~ cover + cov2
cover ~ firesev
cover ~~ cov2
cov2 ~~ firesev
'
# Fit the model (i.e. est. parameters)
mod1.fit <- sem(mod, data=k.dat)
mod2.fit<- sem(mod2, data=k.dat,fixed.x=FALSE)
vartable(mod1.fit)
k.dat$rich<-k.dat$rich/100
View(k.dat$rich)
summary(mod1.fit, rsq=T)  # rsq=T means output the r-sqr
summary(mod2.fit, rsq=T)
semPaths(mod1.fit, "std", edge.label.cex = 0.5, curvePivot = TRUE, layout = "tree")
semPaths(mod2.fit, "std", edge.label.cex = 0.5, curvePivot = TRUE, layout = "tree")
semPaths(mod1.fit, "std", edge.label.cex = 0.5, curvePivot = TRUE, layout = "tree")
semPaths(mod2.fit, "std", edge.label.cex = 0.5, curvePivot = TRUE, layout = "tree")
my.data<-read.csv("My6380Data.csv")
library(papaja)
install.packages("mathjax")
install.packages("MathJax")
library(psych)
library(apaTables)
library(dplyr)
library(MBESS)
library(devtools)
devtools::install_github("hadley/ggplot2")
library(ggplot2)
mydata = read.csv("My6380Data.csv")
View(mydata)
summary(my.regression1)
mydata = read.csv("My6380Data.csv")
my.regression1 <- lm(VCI~RimeAwareness+PhonologicalAwareness+VerbalSTM, data=mydata)
print(my.regression1)
summary(my.regression1)
summary(fit, standardized = TRUE, rsq = T)
# Chunk 1
require(knitr)
hook_source_def = knit_hooks$get('source')
knit_hooks$set(source = function(x, options){
if (!is.null(options$verbatim) && options$verbatim){
opts = gsub(",\\s*verbatim\\s*=\\s*TRUE\\s*", "", options$params.src)
bef = sprintf('\n\n    ```{r %s}\n', opts, "\n")
stringr::str_c(bef, paste(knitr:::indent_block(x, "    "), collapse = '\n'), "\n    ```\n")
} else {
hook_source_def(x, options)
}
})
# Chunk 2
library(psych)
library(apaTables)
library(dplyr)
library(MBESS)
library(devtools)
library(ggplot2)
mydata = read.csv("My6380Data.csv")
# Chunk 3: verbatimchunk
my.regression1 <- lm(VCI~RimeAwareness+PhonologicalAwareness+VerbalSTM, data=mydata)
# Chunk 4
print(my.regression1)
# Chunk 5
summary(my.regression1)
# Chunk 6
ci.R2(R2=.16, df.1 = 3, df.2 = 72, Random.Predictors = FALSE)
# Chunk 7
apa.reg.table(my.regression1, filename = "myRegressionTable1.doc")
# Chunk 8
my.regression2 <- lm(SelfRegulation~VCI+VSI+WMI+PSI, data=mydata)
print(my.regression2)
# Chunk 9
summary(my.regression2)
# Chunk 10
ci.R2(R2=.59, df.1 = 3, df.2 = 72, Random.Predictors = FALSE)
# Chunk 11
apa.reg.table(my.regression2, filename = "myRegressionTable2.doc")
# Chunk 12
###Load Libraries
library(lavaan)
library(qgraph)
#Built in dataset
my.data<-read.csv("My6380Data.csv")
# Chunk 13
model <- '
# measurement model
ReadingAbility =~ RimeAwareness + PhonologicalAwareness + VerbalSTM
IQ =~ VCI + VSI + WMI + PSI
StudentEngagement =~ Creativity + Leadership + LoveOfLearning + SelfRegulation
# regressions
IQ ~ ReadingAbility
StudentEngagement ~ ReadingAbility + IQ
# residual correlations
VCI ~~ Creativity
VSI ~~ PSI
VSI~~ Leadership
WMI ~~ LoveOfLearning
PSI ~~ SelfRegulation
Leadership ~~ SelfRegulation
'
# Chunk 14
#fit your SEM
fit <- sem(model, data = my.data)
#summarize results
summary(fit, standardized = TRUE, rsq = T)
summary(fit, standardized = TRUE, rsq = T)
